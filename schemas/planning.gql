##
#
# Planning layer
#
# Allows agents to coordinate economic activity by agreeing on a series of
# future events to be undertaken.
#
#
##

type Plan { #TODO: this is not yet in VF, and may or may not be named Plan
  id: ID!
  plannedOn: String
  due: String
  note: String
  name: String
  # createdBy: Agent
  inScopeOf: [Agent] #TODO can be more than Agent
  processes(year: Int, month: Int): [Process]
  workingAgents: [Agent]
  plannedNonWorkInputs: [Commitment]
  plannedOutputs: [Commitment]
  nonWorkInputs: [EconomicEvent]
  outputs: [EconomicEvent]
  kanbanState: String #TODO: codify this?
  # deletable: Boolean
}

union ProcessOrTransfer = Process | Transfer

"""
A planned economic flow, which can lead to economic events (sometimes through commitments).
"""
type Intent {
  id: ID!
  """
  Type of behaviour that is desired
  """
  action: Action
  """
  A `Process` or `Transfer` to which this `Intent` is hoping to contribute towards.
  """
  inputOf: ProcessOrTransfer
  """
  A `Process` or `Transfer` which this `Intent` will eventuate as a result of.
  """
  outputOf: ProcessOrTransfer
  """
  The agent whom the creator of this `Intent` hopes to provide the requested `EconomicResource`.
  """
  provider: Agent
  """
  The agent whom the creator of this `Intent` hopes to benefit from the requested `EconomicResource`.
  """
  receiver: Agent
  inScopeOf: Agent #TODO: more than Agent
  """
  Description of the type of `EconomicResource` that the `provider` may offer to service the intent later.
  """
  intendedResourceClassifiedAs: [URL]
  intendedResourceConformsTo: ResourceSpecification
  intendedQuantity: QuantityValue
  intendedTime: DateTime
  """
  When a specific `EconomicResource` is known which can service the `Intent`, this defines that resource.
  """
  involves: EconomicResource
  finished: Boolean
  note: String
  image: String # url
  under: ExchangeAgreement
  ### inverse relationships and queries
  satisfiedBy: [Satisfaction]
  # deletable: Boolean
}

union EventOrCommitment = EconomicEvent | Commitment

"""
A commitment or economic event that partially or fully satisfies an intent.
"""
type Satisfaction {
  id: ID!
  satisfies: Intent!
  satisfiedBy: EventOrCommitment!
  satisfiedQuantity: QuantityValue
  note: String
}

"""
A planned economic flow that has been promised by an agent to another agent.
"""
type Commitment {
  id: ID!
  """
  Type of behaviour that has been committed to
  """
  action: Action
  """
  A `Process` or `Transfer` which this `Commitment` will aid in the finalisation of.
  """
  inputOf: ProcessOrTransfer
  """
  A `Process` or `Transfer` which this `Commitment` has been generated as a result of.
  """
  outputOf: ProcessOrTransfer
  """
  The agent who is committing to provide some `EconomicResource`.
  """
  provider: Agent
  """
  The agent who will receive any provided `EconomicResource`.
  """
  receiver: Agent
  inScopeOf: Agent
  """
  Description of the type of `EconomicResource` that the `provider` may provide
  to service the `Commitment` later.
  """
  committedResourceClassifiedAs: [URL]
  committedResourceConformsTo: ResourceSpecification
  committedQuantity: QuantityValue
  committedTime: DateTime
  """
  Defines a specific `EconomicResource` that will be provided by the `provider`
  to service the `Commitment`.
  """
  involves: EconomicResource
  finished: Boolean
  plan: Plan
  # isPlanDeliverable: Boolean #TODO: define in VF?
  # forPlanDeliverable: Commitment #TODO: define in VF?
  note: String
  under: ExchangeAgreement
  # fulfilledBy(requestDistribution: Boolean): [Fulfillment]
  fulfilledBy: [Fulfillment]
  involvedAgents: [Agent]
  # deletable: Boolean
}

"""
An agreement to exchange something with another agent(s), containing commitments towards that end.
"""
type ExchangeAgreement {
  id: ID!
  name: String
  agreedTime: DateTime
  ### inverse relationships and queries
  commitments: [Commitment]
  economicEvents: [EconomicEvent]
  involvedAgents: [Agent]
}
