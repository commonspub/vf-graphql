##
#
# Planning layer
#
# Allows agents to coordinate economic activity by agreeing on a series of
# future events to be undertaken.
#
#
##

type Plan { #TODO: this is not yet in VF, and may or may not be named Plan
  id: ID!
  plannedOn: String
  due: String
  note: String
  name: String
  # createdBy: Agent
  inScopeOf: [Agent] #TODO can be more than Agent
  processes(year: Int, month: Int): [Process]
  workingAgents: [Agent]
  plannedNonWorkInputs: [Commitment]
  plannedOutputs: [Commitment]
  nonWorkInputs: [EconomicEvent]
  outputs: [EconomicEvent]
  kanbanState: String #TODO: codify this?
  deletable: Boolean
}

"""
A planned economic flow, which can lead to economic events (sometimes through commitments).
"""
type Intent {
  id: ID!
  action: Action
  inputOf: Process #TODO or Transfer...
  outputOf: Process #TODO or Transfer...
  provider: Agent
  receiver: Agent
  inScopeOf: Agent #TODO: more than Agent
  resourceClassifiedAs: [ResourceClassification]
  resourceConformsTo: ResourceSpecification
  involves: EconomicResource
  intendedQuantity: QuantityValue
  intendedTime: TemporalEntity
  finished: Boolean
  note: String
  image: String # url
  under: Agreement #TODO
  ### inverse relationships and queries
  satisfiedBy: [Satisfaction]
  # deletable: Boolean
}

"""
A commitment or economic event that partially or fully satisfies an intent.
"""
type Satisfaction {
  id: ID!
  satisfiedBy: Commitment! #TODO: or EconomicEvent, how to express this?
  satisfies: Intent!
  satisfiedQuantity: QuantityValue
  note: String
}

"""
A planned economic flow that has been promised by an agent to another agent.
"""
type Commitment {
  id: ID!
  action: Action
  inputOf: Process #TODO or Transfer...
  outputOf: Process #TODO or Transfer...
  provider: Agent
  receiver: Agent
  inScopeOf: Agent
  resourceClassifiedAs: [ResourceClassification]
  resourceConformsTo: ResourceSpecification
  involves: EconomicResource
  committedQuantity: QuantityValue
  # committedOn: String #TODO: ??
  committedTime: TemporalEntity
  finished: Boolean
  plan: Plan
  # isPlanDeliverable: Boolean #TODO: define in VF?
  # forPlanDeliverable: Commitment #TODO: define in VF?
  note: String
  under: Agreement #TODO
  # fulfilledBy(requestDistribution: Boolean): [Fulfillment]
  fulfilledBy: [Fulfillment]
  involvedAgents: [Agent]
  # deletable: Boolean
}

"""
An agreement to exchange something with another agent(s), containing commitments towards that end.
"""
type ExchangeAgreement {
  id: ID!
  name: String
  agreedTime: TemporalEntity
  ### inverse relationships and queries
  commitments: [Commitment]
  economicEvents: [EconomicEvent]
  involvedAgents: [Agent]
}
