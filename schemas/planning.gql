##
#
# Planning layer
#
# Allows agents to coordinate economic activity by agreeing on a series of
# future events to be undertaken.
#
#
##

type Plan { #TODO: this is not yet in VF, and may or may not be named Plan
  id: ID!
  plannedOn: String
  due: String
  note: String
  name: String

  "Grouping around something to create a boundary or context, used for documenting, accounting, planning."
  inScopeOf: [AnyType]

  # createdBy: Agent
  processes(year: Int, month: Int): [Process]
  workingAgents: [Agent]
  plannedNonWorkInputs: [Commitment]
  plannedOutputs: [Commitment]
  nonWorkInputs: [EconomicEvent]
  outputs: [EconomicEvent]
  kanbanState: String #TODO: codify this?
  # deletable: Boolean
}

union ProcessOrTransfer = Process | Transfer

"""
A planned economic flow, which can lead to economic events (sometimes through commitments).
"""
type Intent {
  id: ID!

  "Relates a process input or output to a verb, such as consume, produce, work, improve, etc."
  action: Action!

  "A `Process` or `Transfer` to which this `Intent` is hoping to contribute towards."
  inputOf: ProcessOrTransfer

  "A `Process` or `Transfer` which this `Intent` will eventuate as a result of."
  outputOf: ProcessOrTransfer

  "The economic agent from whom the intended, committed, or actual economic event is initiated."
  provider: Agent

  "The economic agent whom the intended, committed, or actual economic event is for."
  receiver: Agent

  "References a concept in a common taxonomy or other classification scheme for purposes of categorization."
  resourceClassifiedAs: [URL]

  "The primary resource knowledge specification or definition of an existing or potential resource."
  resourceConformsTo: ResourceSpecification

  "When a specific `EconomicResource` is known which can service the `Intent`, this defines that resource."
  resourceInventoriedAs: EconomicResource

  quantifiedAs: QuantityValue

  hasBeginning: DateTime
  hasEnd: DateTime
  hasPointInTime: DateTime
  before: DateTime
  after: DateTime

  finished: Boolean

  # deletable: Boolean

  image: URL

  note: String

  "Grouping around something to create a boundary or context, used for documenting, accounting, planning."
  inScopeOf: [AnyType]

  ##############################################################################
  # relationship fields; can only be set indirectly

  under: ExchangeAgreement # Agreement?

  ##############################################################################
  # inverse relationships and queries

  satisfiedBy: [Satisfaction]
}

union EventOrCommitment = EconomicEvent | Commitment

"""
A commitment or economic event that partially or fully satisfies an intent.
"""
type Satisfaction {
  id: ID!

  "An intent satisfied fully or partially by an economic event or commitment."
  satisfies: Intent!

  "A commitment or economic event fully or partially satisfying an intent."
  satisfiedBy: EventOrCommitment!

  "The quantity of the satisfaction of an commitment towards an intent."
  satisfiedQuantity: QuantityValue

  note: String

  "Grouping around something to create a boundary or context, used for documenting, accounting, planning."
  inScopeOf: [AnyType]
}

"""
A planned economic flow that has been promised by an agent to another agent.
"""
type Commitment {
  id: ID!

  "Relates a process input or output to a verb, such as consume, produce, work, improve, etc."
  action: Action

  "A `Process` or `Transfer` which this `Commitment` will aid in the finalisation of."
  inputOf: ProcessOrTransfer

  "A `Process` or `Transfer` which this `Commitment` has been generated as a result of."
  outputOf: ProcessOrTransfer

  "The economic agent from whom the intended, committed, or actual economic event is initiated."
  provider: Agent

  "The economic agent whom the intended, committed, or actual economic event is for."
  receiver: Agent

  "References a concept in a common taxonomy or other classification scheme for purposes of categorization."
  resourceClassifiedAs: [URL]

  "The primary resource knowledge specification or definition of an existing or potential resource."
  resourceConformsTo: ResourceSpecification

  "Economic resource involved in the flow."
  resourceInventoriedAs: EconomicResource

  quantifiedAs: QuantityValue

  hasBeginning: DateTime
  hasEnd: DateTime
  hasPointInTime: DateTime
  before: DateTime
  after: DateTime

  finished: Boolean

  # deletable: Boolean

  plan: Plan
  # isPlanDeliverable: Boolean #TODO: define in VF?
  # forPlanDeliverable: Commitment #TODO: define in VF?

  note: String

  "Grouping around something to create a boundary or context, used for documenting, accounting, planning."
  inScopeOf: [AnyType]

  ##############################################################################
  # relationship fields; can only be set indirectly

  under: ExchangeAgreement # Agreement?

  ##############################################################################
  # inverse relationships and queries

  "The economic event which completely or partially fulfills a commitment."
  fulfilledBy: [Fulfillment]
  # fulfilledBy(requestDistribution: Boolean): [Fulfillment]

  involvedAgents: [Agent]
}

"""
An agreement to exchange something with another agent(s), containing commitments towards that end.
"""
type ExchangeAgreement {
  id: ID!
  name: String
  agreedTime: DateTime #created?

  "Grouping around something to create a boundary or context, used for documenting, accounting, planning."
  inScopeOf: [AnyType]

  ##############################################################################
  # inverse relationships and queries

  commitments: [Commitment]
  economicEvents: [EconomicEvent]
  involvedAgents: [Agent]
}
