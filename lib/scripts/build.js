/**
 * Build script for packaging the GraphQL source files as nodejs modules
 *
 * @package: HoloREA
 * @since:   2019-05-22
 * @flow
 */

const fs = require('fs')
const path = require('path')

const {
  graphqlSync,
  introspectionQuery,
  buildSchema,
} = require('graphql')
const { fromIntrospectionQuery } = require('graphql-2-json-schema')

const SOURCE_FILES = [
  'structs',
  'agent',
  'observation',
  'planning',
  'knowledge',
  'query',
  'mutation',
]

const TEMPLATE = `
// Generated by scripts/build.js - edit the *.gql file instead!

module.exports = \`
$SCHEMA_DOCUMENT
\`

`;

let COMPLETE_DOC_STRING = ''

// bundle each schema file as a nodejs module that exports a string
const typeDefs = SOURCE_FILES
  .forEach(f => {
    const doc = fs.readFileSync(path.resolve(__dirname, `../schemas/${f}.gql`))
    const docString = doc.toString()

    // write JavaScript module version
    fs.writeFileSync(
      path.resolve(__dirname, `../build/${f}.js`),
      TEMPLATE.replace('$SCHEMA_DOCUMENT', docString.replace(/`/g, '\\`'))
    )

    // append this schema to total docstring
    // :TODO:
    // - when proper schema merging is ready, this will have to be changed to use the merge function
    // - we will also probably want to generate independent schema files for each module in addition to the merged one
    COMPLETE_DOC_STRING += docString
  })


// generate & write JSON Schema version
const schema = buildSchema(COMPLETE_DOC_STRING)
const introspection = graphqlSync(schema, introspectionQuery)

if (!introspection) {
  throw new Error('Unknown error executing introspection query. Schema may be invalid- does `npm run test` pass?')
} else if (introspection.error) {
  throw introspection.error
}

fs.writeFileSync(
  path.resolve(__dirname, `../json-schema.json`),
  JSON.stringify(fromIntrospectionQuery(introspection.data), undefined, 2)
)

fs.copyFileSync(path.resolve(__dirname, '../../LICENSE'), path.resolve(__dirname, '../LICENSE'))
fs.copyFileSync(path.resolve(__dirname, '../../README.md'), path.resolve(__dirname, '../README.md'))
fs.copyFileSync(path.resolve(__dirname, '../../CHANGELOG.md'), path.resolve(__dirname, '../CHANGELOG.md'))
