##
#
# Observation layer
#
# Record of what actually happened affecting the economic ecosystem.
#
#
##

union ProductionFlowItem = Process | EconomicResource

"""
An observed economic flow, as opposed to a flow planned to happen in the future. This could reflect a change in the quantity of an economic resource. It is also defined by its behavior in relation to the economic resource (see `Action`)
"""
type EconomicEvent {
  id: ID!

  "Relates a process input or output to a verb, such as consume, produce, work, improve, etc."
  action: Action!

  "Defines the activity to which this event is an input"
  inputOf: Process

  "Defines the activity for which this event is an output"
  outputOf: Process

  "The economic agent from whom the intended, committed, or actual economic event is initiated."
  provider: Agent

  "The economic agent whom the intended, committed, or actual economic event is for."
  receiver: Agent

  "Economic resource involved in the flow."
  resourceInventoriedAs: EconomicResource

  "Additional economic resource on the economic event when needed for receipt. Used when a transfer or move, or sometimes other actions, requires explicitly identifying an economic resource on the receiving side."
  toResourceInventoriedAs: EconomicResource

  "References a concept in a common taxonomy or other classification scheme for purposes of categorization or grouping."
  resourceClassifiedAs: [URI!]

  "The primary resource specification or definition of an existing or potential economic resource. A resource will have only one, as this specifies exactly what the resource is."
  resourceConformsTo: ResourceSpecification

  "The amount and unit of the economic resource counted or inventoried."
  resourceQuantity: QuantityValue

  "The amount and unit of the work or use or citation effort-based action. This is often a time duration, but also could be cycle counts or other measures of effort or usefulness."
  effortQuantity: QuantityValue

  "Specific time marking the exact beginning of flow or process"
  hasBeginning: DateTime
  "Specific time marking the exact end of flow or process"
  hasEnd: DateTime

  "Specific time marking the exact moment at which the flow or process occurred"
  hasPointInTime: DateTime

  "Indicates the flow or process occurred prior to this specific time"
  before: DateTime
  "Indicates the flow or process occurred after this specific time"
  after: DateTime

  "The place where an economic event occurs.  Usually mappable."
  atLocation: SpatialThing

  note: String

  "Grouping around something to create a boundary or context, used for documenting, accounting, planning."
  inScopeOf: [AnyType!]

  "Reference to an agreement between agents which specifies the rules or policies or calculations which govern this flow."
  agreedIn: AnyAgreement

  "This economic event occurs as part of this agreement."
  realizationOf: Agreement

  "References another economic event that implied this economic event, often based on a prior agreement."
  triggeredBy: EconomicEvent

  # requestDistribution: Boolean

  ##############################################################################
  # inverse relationships and queries

  "The commitment which is completely or partially fulfilled by an economic event."
  fulfills: [Fulfillment!]

  "An intent satisfied fully or partially by an economic event or commitment."
  satisfies: [Satisfaction!]

  appreciationOf: [EconomicEvent!]
  appreciatedBy: [EconomicEvent!]

  track: [ProductionFlowItem!]
  trace: [ProductionFlowItem!]

  # validations: [Validation!]
  # isValidated: Boolean

  "The economic event can be safely deleted, has no dependent information."
  deletable: Boolean
}

"""
A resource which is useful to people or the ecosystem.
"""
type EconomicResource {
  id: ID!

  "References a concept in a common taxonomy or other classification scheme for purposes of categorization or grouping."
  classifiedAs: [URI!]

  "The primary resource specification or definition of an existing or potential economic resource. A resource will have only one, as this specifies exactly what the resource is."
  resourceConformsTo: ResourceSpecification

  "Sometimes called serial number, used when each item must have a traceable identifier (like a computer). Could also be used for other unique tracking identifiers needed for resources."
  trackingIdentifier: String

  "Lot or batch of an economic resource, used to track forward or backwards to all occurrences of resources of that lot. Note more than one resource can be of the same lot."
  lot: ProductBatch

  "URI to a descriptive picture of this item."
  image: URI

  "The current amount and unit of the economic resource for which the agent has primary rights and responsibilities, sometimes thought of as ownership. This can be either stored or derived from economic events affecting the resource."
  accountingQuantity: QuantityValue

  "The current amount and unit of the economic resource which is under direct control of the agent.  It may be more or less than the accounting quantity. This can be either stored or derived from economic events affecting the resource."
  onhandQuantity: QuantityValue

  note: String

  "Grouping around something to create a boundary or context, used for documenting, accounting, planning."
  inScopeOf: [AnyType!]

  "The unit used for use or work or cite actions for this resource.  Can be derived from the last event if a pass or fail event."
  unitOfEffort: Unit

  "The last stage the economic resource went through. Can be derived from the most recent process with this resource as an output."
  stage: ProcessSpecification

  "The state of the desired economic resource (pass or fail), after coming out of a test or review process."
  state: Action

  ##############################################################################
  # relationship fields; can only be set indirectly

  "A more concrete resource upon which a resource is based."
  underlyingResource: EconomicResource

  "Used when a stock economic resource contains units also defined as economic resources."
  contains: [EconomicResource!] #TODO: containedBy and make this the inverse??

  "The current place an economic resource is located. Could be at any level of granularity, from a town to an address to a warehouse location. Usually mappable."
  currentLocation: SpatialThing

  ##############################################################################
  # inverse relationships and queries

  trace: [EconomicEvent!]
  track: [EconomicEvent!]

  # resourceContacts: [Agent!]
  # owners: [Agent!]  TODO: define agent-resource relationships, if we do need them
}

"""
A lot or batch, defining a resource produced at the same time in the same way.
From DataFoodConsortium vocabulary https://datafoodconsortium.gitbook.io/dfc-standard-documentation/.
"""
type ProductBatch {
  id: ID!
  batchNumber: String!
  expiryDate: DateTime
  productionDate: DateTime
}

"""
An activity that changes inputs into outputs.  It could transform or transport economic resource(s).
"""
type Process {
  id: ID!
  name: String!

  "Specific time marking the exact beginning of flow or process"
  hasBeginning: DateTime
  "Specific time marking the exact end of flow or process"
  hasEnd: DateTime

  "Specific time marking the exact moment at which the flow or process occurred"
  hasPointInTime: DateTime

  "Indicates the flow or process occurred prior to this specific time"
  before: DateTime
  "Indicates the flow or process occurred after this specific time"
  after: DateTime

  # started: Boolean
  finished: Boolean

  "The recipe definition or specification for a process."
  basedOn: RecipeProcess

  # Process classifications under review.
  # You are possibly looking for a "skill EconomicResource" provided to the process as a 'work' action EconomicEvent input.
  # @see https://github.com/valueflows/vf-graphql/issues/25#issuecomment-489429982
  "References a concept in a common taxonomy or other classification scheme for purposes of categorization or grouping."
  classifiedAs: [URI!]

  note: String

  "Grouping around something to create a boundary or context, used for documenting, accounting, planning."
  inScopeOf: [AnyType!]

  "The process with its inputs and outputs is part of the plan."
  plannedWithin: Plan

  ##############################################################################
  # inverse relationships and queries

  inputs(action: ID): [EconomicEvent!]
  outputs(action: ID): [EconomicEvent!]
  unplannedEconomicEvents(action: ID): [EconomicEvent!]

  committedInputs(action: ID): [Commitment!]
  committedOutputs(action: ID): [Commitment!]

  intendedInputs(action: ID): [Intent!]
  intendedOutputs(action: ID): [Intent!]

  nextProcesses: [Process!]
  previousProcesses: [Process!]

  workingAgents: [Agent!]

  trace: [EconomicEvent!]
  track: [EconomicEvent!]

  "The process can be safely deleted, has no dependent information."
  deletable: Boolean
}

"""
A way to tie an economic event that is given in loose fulfilment for another economic event, without commitments or expectations. Supports the gift economy.
"""
type Appreciation {
  id: ID!

  "The `EconomicEvent` this appreciation has been given in acknowledgement of"
  appreciationOf: EconomicEvent!

  "The `EconomicEvent` provided as a gift in this appreciation"
  appreciationWith: EconomicEvent!

  note: String
}
